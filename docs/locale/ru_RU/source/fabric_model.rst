Модель Hyperledger Fabric
========================

В этом разделе описываются ключевые концепции, используемые в Hyperledger Fabric, 
с помощью которых реализируется гибко настраиваемое блокчейн решение промышленного уровня : 

* `Активы`_ --- определение активов помогает осуществлять обмен всем, что может иметь денежную стоимость, 
  через сеть, от органических продуктов питания до антикварных машин или фьючерсов. 
* `Чейнкод`_ --- Исполнение чейнкода отделено от упорядочения транзакций,
  ограничивая требуемые уровни доверия и верификации на всем спектре типов узлов,
  обеспечивая оптимизацию масштабируемости и скорости работы сети.
* `Свойства реестра`_ --- Неизменяемый, совместно используемый реестр хранит  
  истории всех транзакций каждого канала, и включает SQL-подобные возможности запросов 
  для эффективного аудирования и разрешения конфликтов. 
* `Приватность`_ --- Каналы и частные хранилища данных могут осуществлять частные и 
  конфиденциальная транзакции со множественными сторонами по транзакции, что может требоваться 
  конкурирующими бизнесами и регулируемыми отраслями, которые обмениваются активами
  в общей сети. 
* `Услуги безопасности и членства`_ --- Разрешительное членство предоставляет 
  участие в доверенной блокчейн-сети, что позволяет участникам знать, что все их транзакции
  могут быть обнаружены и отслежены авторизованными регуляторами и контролерами.
* `Консенсус`_ --- Уникальный подход к консенсусу обеспечивает гибкость и масштабируемость, 
  необходимую для решений промышленного уровня. 


Активы
------

Активы могут быть как осязаемыми (пример: недвижимость и оборудование), так и нематериальными 
(контракты и интеллектуальная собственность).  Hyperledger Fabric предоставляет
возможность изменять активы посредством транзакций чейн-кода. 

Активы в Hyperledger Fabric представлены как собрание 
пар "ключ-значение", при этом изменения состояния записываются транзакциями на реестре :ref:`Канала`.  
Активы могут быть представлены в бинарном коде и/или JSON - формате.


Чейнкод
---------

Чейнкод это программное обеспечение, которое определяет актив (активы) и иструкции по транзакциям
изменения активов, иными словами, это записанная бизнес-логика. Чейнкод устанавливает правила чтения
или изменения пар "ключ-значение" и изменения иной информации в базе данных.
Функции чейнкода исполняются на базе данных текущего состояния реестра и инициируются через предложение транзакции. 
Исполнение чейнкода приводит к набору записей "ключ-значение" (набор записи), которые затем могут быть представлены
в сеть и применены к реестру всеми равноправными узлами сети. 


Особенности реестра
---------------

Реестр является упорядоченной, устойчивой к вмешательству записью всех преобразований состояния в сети. 
Преобразования состояния являются результатом вызовов чейнкода, представленных участниками. 
Каждая транзакция приводит к набору пар "ключ-значение" для активов, которые затем предоставляются в реестр
как события создания, обновления или удаления. 

Реестр состоит из блокчейна, который хранит неизменяемую последовательную запись в блоках, а также
базу данных состояния, чтобы поддерживать текущее состояние сети. На один канал приходится один реестр. 
Каждый равноправный узел содержит копию реестра каждого канала, членом которого он является. 


Некоторые свойства реестра Fabric:

- Запрашивать и изменять реестр можно через поиск, основанный на ключе, запросы диапазонов и запросы со сложным ключом. 
- Производить запросы только на чтение, используя расширенный язык запросов (если для базы состояния используется CouchDB).
- Запросы только на чтение относительно истории --- можно запрашивать в истории реестра ключ, обеспечивая тем самым сценарии подтверждения происхождения данных. 
- Транзакции состоят из версий ключ/значение, которые были прочитаны в чейнкоде (набор чтения) и ключей/значений, которые были записаны в чейнкод (набор записи)
- Транзакции содержат подписи каждого подписывающего узла и предоставляются в службу упорядочения
- Транзакции организуются в блоки и "доставляются" из службы упорядочения всем равноправным узлам в канале
- Равноправные узлы валидируют транзакции, исходя из политик подписания и обеспечивают исполнение политик
- Прежде, чем применить блок, проводится проверка версии, чтобы гарантировать неизменность состояний активов за время исполнения чейнкода
- Как только транзакция валидирована и представлена, наступает неизменность 
- Реестр канала содержит блок конфигурации, определяющий политики, списки контроля доступа и прочую имеющую значение информацию 
- Каналы содержат копии службы членства :ref:`MSP`, которые позволяют зашифрованным материалам вести происхождение от различных удостоверяющих центров
См. материал :doc:`реестр` для более глубокого изложения темы, описания структуры храрения, и возможностях запросов


Приватность
-------

Hyperledger Fabric применяет неизменяемый реестр для каждого канала в отдельности, 
а также чейнкод, который может изменять текущее состояние активов  (т.е. обновлять
пары ключ-значение). Реестр существует в масштабе канала - его можно распространить
по всей сети (исходя из предположения о том, что каждый участник работает на одном общем канале) 
--- или он может быть закрыт от широкого круга, ограничивая распространие только избранным кругом участников).

В последнем случае, такие участники создают отдельный канал, 
посредством чего изолируют и отделяют свои транзакции и реестр. Для того, чтобы выработать
сценарии, которые бы желали преодолеть разрыв между прозрачностью и приватностью, 
чейнкод может быть установлен только на тех узлах, которым необходимо получать доступ к состоянию активов
для чтения и записи (иными словами, если чейнкод не установлен узлом, он не сможет должным образом взаимодействовать с реестром). 


Если подмножеству организаций в канале требуется сохранить свои транзакции в тайне, 
используется частное хранение данных, что позволяет хранить данные, логически отделенные от реестра канала, с
предоставлением доступа только определенному кругу организаций. 

Таким образом каналы сохраняют приватность в контексте более широкой сети, в 
то время, как частные собрания данных сохраняют приватность между подгруппами организаций в канале. 

Для дальнейшего сокрытия данных, значения внутри чейнкода могут быть зашифрованы
(частично или полностью), используя обычные криптографические алгоритмы, такие как AES, 
прежде, чем отсылать транзакции в службу упорядочения и добавлять блоки в реестр. 
Как только зашифрованные данные записаны в реестр, их может расшифровать только пользователь, 
обладающий соответствующим ключом, что был использован для генерации зашифрованного текста. 


См. раздел :doc:`private-data-arch` для более подробного пояснения того, как достичь приватности в вашей блокчейн-сети. 


Безопасность и служба членства
------------------------------

Hyperledger Fabric поддерживает транзакционну сеть, в которой все участники 
имеют идентификацию. Инфраструктура публичного ключа (PKI) используется для генерации криптографических 
сертификатов, привязанных к организациям, компонентам сети и конечным пользователям (или клиентским приложениям). 
Как итог, как и в более широкой сети, так и на уровне каналов, можно контролировать и управлять доступом к данным.  
Концепция "разрешительного" принципа в Hyperledger Fabric, наряду с наличием и возможностями каналов, помогает 
работать со сценариями, в которых критически требуются приватность и конфиденциальность.

См. раздел :doc:`msp` для более полного понимания криптографической реализации и подхода 
"подпиши, проверь, идентифицируй" в Hyperledger Fabric.


Консенсус
---------

В технологии распределенного реестра, под консенсусом в последнее время
понимается особый алгоритм, реализованный в единой функции. В то же времы, консенсус означает не просто 
согласие по поводу упорядочения транзакций. В Hyperledger Fabric консенсус играет фундаментальную роль
в полном потоке транзакций, от предложения/выдвижения и подписания до упорядочения, валидации, и предоставления. 
Коротко говоря, консенсус определен как полный цикл верификации корректности
набора транзакций, составляющих блок. 

Консенсус достигается в итоге, когда порядок и результаты транзакций блока
явно соответствуют открытым критериям политик. Эта система сдержек и противовесов
работает на протяжении жизненного цикла транзакции, и включает использование политик
подписания для определения того, какой конкретный член должен подписать определенный
класс транзакций, а также включает использование системных чейнкодов для гарантии
исполнения политик. Перед предоставлением, равноправные узлы сети используют 
системные чейнкоды для того, чтобы убедиться в наличии достаточного количества подписей от 
надлежащих участников. Более того, будет проведена проверка версии, во время которой все согласовывают
текущее состояние реестра, прежде чем добавлять в реестр блоки, содержащие транзакции. 
Эта последняя проверка служит защитой от "задвоения" и других угроз, которые могут нарушить
безопасность и сохранность данных, и позволяет исполнять функции на нестатичных переменных 

В дополнение к множеству проверок подписей, валидности и версии, постоянно проводится верификация
участников во всех направлениях транзакционного потока. Списки контроля доступа 
накладываются на все иерархические уровни сети (от службы упорядочения до каналов),
и систематически подписываются, верифицируются и опознаются полезные нагрузки - по мере того, как предложение
транщакции проходит через различные архитектурные компоненты. В заключение, консенсус 
это не просто согласованный порядок пакета транзакций, а, скорее, всеохватная характеризация, достигаемая
как производный продукт от непрерывных верификаций, происходящих на протяжении всего пути транзакции -
от предложения до предоставления. 



См. диаграмму в разделе :doc:`txflow` для визуального представления консенсуса.


.. Licensed under Creative Commons Attribution 4.0 International License
   https://creativecommons.org/licenses/by/4.0/
